{
    "name": "InputAsset",
    "type": "object",
    "source": "/Users/kreddy8/dev/player/reference-assets/input/dist/types.d.ts",
    "properties": {
        "id": {
            "required": true,
            "node": {
                "type": "string",
                "title": "Asset.id",
                "description": "Each asset requires a unique id per view"
            }
        },
        "type": {
            "required": true,
            "node": {
                "type": "string",
                "const": "input",
                "title": "Asset.type",
                "description": "The asset type determines the semantics of how a user interacts with a page"
            }
        },
        "label": {
            "required": false,
            "node": {
                "type": "ref",
                "ref": "AssetWrapper<AnyTextAsset>",
                "genericArguments": [
                    {
                        "type": "ref",
                        "ref": "AnyTextAsset"
                    }
                ],
                "title": "InputAsset.label",
                "description": "Asset container for a field label."
            }
        },
        "binding": {
            "required": true,
            "node": {
                "type": "ref",
                "ref": "Binding",
                "title": "InputAsset.binding",
                "description": "The location in the data-model to store the data"
            }
        },
        "metaData": {
            "required": false,
            "node": {
                "type": "object",
                "properties": {
                    "beacon": {
                        "required": false,
                        "node": {
                            "name": "BeaconDataType",
                            "source": "/Users/kreddy8/dev/player/plugins/beacon/dist/beacon.d.ts",
                            "type": "or",
                            "or": [
                                {
                                    "type": "string",
                                    "title": "BeaconDataType"
                                },
                                {
                                    "type": "record",
                                    "keyType": {
                                        "type": "string"
                                    },
                                    "valueType": {
                                        "type": "any"
                                    },
                                    "title": "BeaconDataType"
                                }
                            ],
                            "title": "InputAsset.metaData.beacon",
                            "description": "Additional data to beacon when this input changes"
                        }
                    }
                },
                "additionalProperties": false,
                "title": "InputAsset.metaData",
                "description": "Optional additional data"
            }
        }
    },
    "additionalProperties": {
        "type": "unknown"
    },
    "title": "InputAsset",
    "description": "This is the most generic way of gathering data. The input is bound to a data model using the 'binding' property.\nPlayers can get field type information from the 'schema' definition, thus to decide the input controls for visual rendering.",
    "genericTokens": [
        {
            "symbol": "AnyTextAsset",
            "constraints": {
                "type": "ref",
                "ref": "Asset"
            },
            "default": {
                "type": "ref",
                "ref": "Asset"
            }
        }
    ]
}